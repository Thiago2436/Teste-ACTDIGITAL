name: CI/CD Pipeline

on:
  push:
    
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Instalar dependências
        run: npm install

      - name: Executar testes
        run: npm test -- --detectOpenHandles

      - name: Construir aplicação
        run: npm run build || echo "Nenhum comando de build necessário"

      - name: Armazenar artefato
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: build/

  release:
    needs: build-test
    runs-on: ubuntu-latest
    

    permissions: 
      contents: write
  

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
        
      - name: Criar tag
        run: git tag v$(date +'%Y%m%d%H%M%S')
        
      - name: Enviar tag
        run:  git push origin  v$(date +'%Y%m%d%H%M%S') #https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/Thiago2436/Teste-ACTDIGITAL.git --tags
      
      - name: Verificar as tags enviadas
        run: git tag -l
      
      - name: Criar Release no GitHub via API
        run: |
         TAG=$(git describe --tags)
         curl -X POST "https://api.github.com/repos/Thiago2436/Teste-ACTDIGITAL/releases" \
           -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
           -H "Accept: application/vnd.github.v3+json" \
          -d '{
             "tag_name": "'"$TAG"'",
             "target_commitish": "main",
             "name": "Release '"$TAG"'",
             "body": "Nova versão '"$TAG"' lançada!",
             "draft": false,
             "prerelease": false   }'
        

             
  deploy:
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://meu-site-teste.com

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Deploy para Servidor de Testes
        run: echo "Deploy realizado com sucesso!"

  notify:
    if: failure()
    needs: [build-test, release, deploy]
    runs-on: ubuntu-latest

    steps:
      - name: Notificação de Falha
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          to: thiagomartins.florestal@gmail.com
          from: greicesmartinez@gmail.com
          subject: "Falha no Pipeline CI/CD"
          body: "O pipeline falhou! Verifique os logs no GitHub Actions."
